1) cd filename
  --------------
          Navigate to the Desktop or goes to that particular file
      ex : cd Desktop
2) ls
  ----
          After navigating, you can list the files and folders in your current directory
      ex: ls

3) cd ~
   ----
          To return to your home directory:
     ex : cd ~

4) mkdir fileName
   ----------------
          The mkdir command is used to create a new directory (folder) in your current location or a specified path
      ex : mkdir Project

5) git init
  ----------
          This Intializes an empty git repository(where history is stored) .

6) ls -a
  -------
        ls -a is used to list all files and directories, including hidden ones, in the current directory. 

7) touch filename
  -----------------
       he touch command is used to create an empty file or update the timestamp of an existing file.
    ex:
        touch filename

    ex:
        touch filename.txt
    
    ex:
        touch file1.txt file2.txt file3.txt

8) git status
  ------------
        it status shows the current state of your working directory and staging area in a Git repository. 
        It helps you track changes in your project, such as files that have been modified, added, or deleted, 
        and whether those changes are staged for a commit.

  -- >Steps to add permanentely to our history follow step 9 - 10 then it will go into history

  STEP -1 )

      9) git add .      (or)         git add fileName
        ----------                 ---------------------
                The command git add . stages all the changes in the current directory (and its subdirectories) to be committed. This includes:
          
                    New files that have not yet been tracked by Git.
                    Modified files that have been changed since the last commit.
                    Deleted files that have been removed from the working directory.
                    
                git add .
                    Explanation:
                    The . (dot) means "all files in the current directory and its subdirectories."
                    It doesn't commit the changes, but it prepares the files for committing by adding them to the staging area.
          
STEP - 2 )
     
        10) git commit -m " filename file added"
           ------------------------------------
                      The command git commit -m "filename file added" creates a commit in Git with a message describing 
                      the changes made. However, the commit message should be more descriptive of what was changed, 
                      rather than just the file name.
          
                ex :
                    git commit -m "Added newfile.txt to project directory"
                            This message clearly explains what was added and where.
          
11) vi fileName
   --------------
        The command vi filename opens the specified file (in this case, filename) in the vi (or vim) text editor. 
          Here’s how to use vi effectively:
          Ex :
                  vi filename
                        If the file exists, it will open the file for editing.
                        If the file doesn’t exist, a new file will be created with that name.

12) rm -rf filename
    ---------------
          The command rm -rf filename is used in Linux/Unix-based systems to forcefully delete a file or directory 
          along with all its contents.
        Ex:
            rm -f filename
13) git reset 
   ------------
            The git reset command is used to undo changes in a Git repository. It can modify the current branch's 
            commit history and the working directory. Its behavior depends on the options provided 
            (--soft, --mixed, --hard).
        Ex:
              git reset  77b1f593454f2f6629799e8d394d7b15a1f6bcd3  

14) git stash 
    ----------
            he git stash command is a powerful tool in Git that temporarily saves changes in your working directory 
            without committing them. This allows you to clean your working directory so you can work on something 
            else, switch branches, or pull updates, and then return to your saved changes later
        Ex:
            git stash

15)  git stash pop
    ---------------
          The git stash pop command is used to reapply the most recent stash to your working directory and delete 
          it from the stash list. It's a convenient way to retrieve your stashed changes while cleaning up the 
          stash history.

16) git stash clear
    ---------------
          The git stash clear command is used to delete all stashes saved in the repository. After running this
          command, the stash list will be empty, and all saved changes in the stash will be permanently removed.

17) git remote add origin <respoitory-url>
    --------------------------------------
        The git remote add origin command is used to link your local Git repository to a remote repository 
        (typically hosted on platforms like GitHub, GitLab, or Bitbucket). This allows you to push your local 
        changes to the remote repository and pull updates from it.
    Ex:
         git remote add origin https://github.com/Balasubramanyam140/Git-Workplace








